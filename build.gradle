
apply plugin: "groovy"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'project-report'
apply plugin: 'pmd'
apply plugin: 'application'
apply plugin: 'build-dashboard'
apply from: './properties.gradle'


description = "common dao"

applicationDefaultJvmArgs = ["-Dfile.encoding=UTF=8"]
libsDirName = './target'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.compilerArgs = [
    "-Xlint:none",
    "-g",
    "-encoding",
    "UTF-8"
]

install {
    repositories.mavenInstaller {
        pom.version = '0.0.1'
        pom.artifactId = 'commonDao'
        pom.groupId = 'pl.java.scalatech'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://localhost:8487/nexus/content/groups/public/"}
    maven { url "https://repository.jboss.org/nexus/content/groups/public/"}
    maven { url "http://repo.spring.io/libs-release-local/"}
    maven { url "http://repo.spring.io/libs-milestone" }
}

sourceSets {
    intTest
    main {
        java { srcDir 'src/main/java' }
        groovy { srcDir 'src/main/groovy' }
        resources { srcDir 'src/main/resources' }
    }
    test {
        java { srcDir 'src/test/java' }
        groovy { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
    }
}

dependencies {
    compile ("org.codehaus.groovy:groovy:${groovyVersion}")
    compile ("org.springframework:spring-core:${springVersion}")
    compile ("org.springframework:spring-beans:${springVersion}")
    compile ("org.springframework:spring-context:${springVersion}")
    compile ("org.springframework:spring-orm:${springVersion}")
    compile ("org.springframework:spring-tx:${springVersion}")
    testCompile ("org.springframework:spring-test:${springVersion}") 
    compile ("org.springframework.data:spring-data-jpa:${springDataJPAVersion}")
    
    compile ("javax.validation:validation-api:${javaxValidationVersion}")
    compile ("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile ("org.hibernate:hibernate-core:${hibernateVersion}")
    compile ("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    compile ("org.hibernate:hibernate-ehcache:4.3.1.Final")
    
    compile("org.projectlombok:lombok:${lombokVersion}")
    compile("com.google.guava:guava:${guavaVersion}"){
        transitive = true
    }

    compile("com.jolbox:bonecp:${bonecpVersion}")
     
    compile("com.jolbox:bonecp-spring:${bonecpVersion}" )
       
    compile("com.jolbox:bonecp-provider:${bonecpProviderVersion}")
     
    compile("org.jasypt:jasypt:${jasyptVersion}")
    runtime("org.hsqldb:hsqldb:${hsqldbVersion}")

    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("org.slf4j:slf4j-ext:$slf4jVersion")
    runtime("ch.qos.logback:logback-classic:$logbackVersion")
    compile("ch.qos.logback:logback-core:$logbackVersion")

      
    testCompile("mysql:mysql-connector-java:${mysqlVersion}")
    testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")
    testCompile("junit:junit:$junitVersion")
    testCompile("org.easytesting:fest-assert:${festAssertVersion}")
    testCompile("com.googlecode.catch-exception:catch-exception:1.2.0")
    testCompile ("org.spockframework:spock-core:${spockVersion}")
    testCompile ("org.spockframework:spock-spring:${spockVersion}")

        
}

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        exclude group: "commons-logging"
        exclude module: "slf4j-log4j12"
        exclude module: "hibernate-jpa-2.0-api"
        
        
    }
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

jar {
    baseName = 'commonDao'
    version =  '0.0.1'

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes 'Implementation-Title': 'groovy_example',
        'Implementation-Version': version,
        'Built-By': System.getProperty('user.name'),
        'Built-Date': new Date(),
        'Built-JDK': System.getProperty('java.version'),
        'Built-Gradle': gradle.gradleVersion
    }
}

task wrapper(type: Wrapper) { gradleVersion = '10.1' }
